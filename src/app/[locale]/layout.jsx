// "use client";

import { Inter } from "next/font/google";

import { notFound } from "next/navigation";
import { NextIntlClientProvider, useMessages } from "next-intl";

//
import "../../../public/assets/css/bootstrap-icons.css";
import "../../../public/assets/css/boxicons.min.css";
import "../../../public/assets/css/fontawesome.min.css";
import "../../../public/assets/css/bootstrap.min.css";
import "../../../public/assets/css/swiper-bundle.min.css";
import "../../../public/assets/css/nice-select.css";
import "../../../styles/custom.css";
import "../../../public/assets/css/style.css";

// ...

// import "../../../styles/globals.css";

// import "../../../public/assets/css/style-rtl.css";
// import "../../../public/assets/css/bootstrap.rtl.min.css";

//
// import { useEffect, useState } from "react";

import Preloader from "../../components/common/Preloader";
import { WhatsAppProvider } from "./providers";

const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// Can be imported from a shared config

export default function LocaleLayout({ children, params: { locale } }) {
  // const [loading, setLoading] = useState(true);
  const messages = useMessages();
  // const handlePreloaderClose = () => {
  //   setLoading(false);
  // };

  // useEffect(() => {
  //   // Simulate loading for 3 seconds (adjust as needed)
  //   setTimeout(() => {
  //     setLoading(false);
  //   }, 3000);
  // }, []);
  // useEffect(() => {
  //   import("../../../public/assets/js/bootstrap.min.js");
  // }, []);
  // Validate that the incoming `locale` parameter is valid

  return (
    <html lang={locale} dir={locale == "ar" ? "rtl" : "ltr"}>
      <NextIntlClientProvider messages={messages}>
        <body className={inter.className}>
          {/* {loading ? (
            <Preloader onClose={handlePreloaderClose} />
          ) : (
            )} */}
          <WhatsAppProvider>{children}</WhatsAppProvider>
        </body>
      </NextIntlClientProvider>
    </html>
  );
}
